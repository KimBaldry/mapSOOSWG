#' @title Draw a single SOOS Working Group Map
#'
#' @author Kimberlee Baldry
#' @description This script contains a function to draw a map for a single working group.
#'
#' @note In development
#'
#' @return A ggplot object
#' @param WG_name Name of the WG to be plotted
#' @param WG_countries Character vector of the ISO3 codes of WG member countries
#'
#' @import ggplot2
#' @import data.table
#' @import broom
#' @import rgeos
#' @import rworldmap
#' @import ggimage
#' @import tidyverse
#'
#' @export

# for development/debugging
# WG_name = WG_names[rw]
# WG_countries = countries[[rw]]

plot_WG_map <- function(WG_name, WG_countries){

  colours = c("#E4EEEE", "#090A0B","#81D4FA" ,"#13ABE4", "#156E91")
  # Create a data frame that has an indicator for participating countries
  # This will allow us to colour countries
  countDF <- data.frame(country = WG_countries,
                        participation = rep(1, length(WG_countries)))
  Map <- joinCountryData2Map(countDF, joinCode = "ISO3",
                             nameJoinColumn = "country")
  map_data = tidy(Map)
  sub_Map =Map@data[,c("ADMIN","ISO3","participation")]
  colnames(sub_Map)[1] = c("id")
  map_data = data.table(left_join(map_data, sub_Map))

  # Create a data from for the centroids of countries. This will allow up to put pins at locations
  wmap <- getMap(resolution="high")
  # get centroids
  centroids <- gCentroid(wmap, byid=TRUE)
  centroids_df <- as.data.frame(centroids)
  centroids_df = centroids_df[match(sub_Map$id[which(sub_Map$participation == 1)], rownames(centroids_df)),]

  centroids_df$image  = file.path("./data","marker.png")
  # This is the baseplot code for the map
  baseWO =  ggplot() +
    geom_polygon(data =map_data, aes(x = long, y = lat, group = group),fill = "#B0BEC5", colour = "#B0BEC5") +
    # we just plot red polygons over the top to avoid having to use scale_fill twice
    geom_polygon(data =map_data[participation == 1], aes(x = long, y = lat, group = group), fill = colours[3], colour = colours[3], lwd = 0.5) +
    xlab("") +
    ylab("") +
    #geom_point(data = df, aes(x=x, y=y), col = colours[5], cex = 3) +
    geom_image(data = centroids_df, aes(x = x, y=y, image = image), size = 0.03, asp =1.2)+ # add asp (aspect ratio width:height). Add nudge
    geom_rect(aes(xmin = -180,xmax = 180, ymin = -90, ymax = 90),size = 1, color = "black", fill = NA)+
    # Adds axes
    # Change theme to remove axes and ticks
    theme(panel.background = element_blank(),legend.position = "none",
          panel.grid.minor = element_blank(),axis.ticks=element_blank(), axis.text = element_blank())

  return(baseWO)

}
