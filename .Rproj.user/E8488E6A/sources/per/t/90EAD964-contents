#' @title Create multiple SOOS Working Group Map from a file
#'
#' @author Kimberlee Baldry
#' @description This script contains a function to create all SOOS WG maps from a file. The function: - acesses the file - applies data from rows of the file to 1. plot a WG map using plot_WG_map() and 2. save the file as a .png file using save_map() - outputs a message for each sucessfull map and when teh run is complete
#'
#' @note In development. Editing.
#'
#' @return It will let you know if the code worked!
#' @param filepath The fullname of the file to plot WG or geocoded markers. This can be left blank. The file must contain the columns named "Acronym" (for the WG) and "Countries Represented"
#' @param outdir The directory where you would like .png files saved
#' @param lookupfile The fullname of the lookup table file. This file must contain 2 columns labeled "Country" (what SOOS records the country as) and "ISO3_name"
#' @param categoryfile The fullname of the category file. This file must contain 3 columns labeled "Acronym" (for the WG or plotname), "Countries" (A list of SOOS named countries separated by a ";") and "Categories" (a list of assigned categories for each SOOS country). See example file for details. Note the categories should be numeric and the highest numbered category will be shown on the country.
#' @param plot_type Is the baseplot a WG plot (plot_type = "WG"), a geocode plot (plot_type = "geocode"), or are there no markers (plot_type = "none")?
#' @param category_colours The category colours, in order from lowest to highests category.
#' @param marker_colour Set to NULL to keep normal plot style or set to a colour to change the marker colours. Only filled markers will be plotted.
#' @import ggplot2
#' @import data.table
#' @import broom
#' @import rgeos
#' @import rworldmap
#' @import ggimage
#' @import tidyverse
#' @import raster
#' @import sf
#'
#' @export

# for development/debugging
# maindir = "C:/Users/kabaldry/OneDrive - University of Tasmania/Documents/SOOS"
# filename = file.path(maindir, "file_examples", "SOOSWG_file_09022020.csv")
# outdir = file.path(maindir, "output","style1")
# lookupfile = file.path(maindir, "file_examples", "country_lookup_table.txt")
# categoryfile = file.path(maindir, "data", "exampleCATlist.txt")

category_maps <- function(filename = NULL, outdir, lookupfile, categoryfile, plot_type = "WG", category_colours = SOOS_col, marker_colour = NULL){

  ### Load category information
  # note all variables starting with "cat" relate to the category data
  cat_data = read.csv(categoryfile, header = T,  stringsAsFactors = F)
  colnames(cat_data) = gsub("ï..","",colnames(cat_data))
  print(paste(basename(categoryfile), "sucessfully opened"))
  cat_WG_names = cat_data$Acronym
  cat_countries = lapply(cat_data$Countries, FUN = function(x){unlist(strsplit(x, split = "; "))})
  categories = lapply(cat_data$Categories, FUN = function(x){unlist(strsplit(x, split = "; "))})
  check = check_country_names(countries, lookupfile)
  if(any(check == "Failed")){break}
  countries = check

  ### read the file that assigns markers
  if(!is.null(filename)){
    data = read.csv(filename, header = T,  stringsAsFactors = F)
    colnames(data) = gsub("ï..","",colnames(data)) # this is a bug that can occur from excel (yay excel)
    print(paste(basename(filename), "sucessfully opened"))
    # prepare data
    if(plot_type = "WG"){
      WG_names = data$Acronym
      countries = lapply(data$Countries.Represented, FUN = function(x){unlist(strsplit(x, split = "; "))})
      # check all countries to be plotted have assigned categories

      # check that all countries to be plotted appear in the country lookup table
      check = check_country_names(countries, lookupfile)
      if(any(check == "Failed")){break}
      }
    }


  if(plot_type)


  # loop through WG (for categories)
  for(rw in 1:length(cat_WG_names)){
    # make plot object
    if(WG){map = plot_WG_map(WG_names[rw], countries[[rw]])}else{map = plot_geocode_map(WG_names[rw], countries[[rw]])}
    # save plot
    map = country_categories(map, country_cats)

    ## if filname = NULL and marker_colour != NULL then add plot markers
    save_map(map,WG_names[rw], outdir)
  }
  print("Sucess! All maps were created")
}
