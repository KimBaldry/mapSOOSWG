#' @title Draw a single SOOS Working Group Map with institution markers
#'
#' @author Kimberlee Baldry
#' @description This script contains a function to draw a map for a single working group with institution markers.
#'
#' @note In development. Editing.
#'
#' @return A ggplot object
#' @param WG_name Name of the WG to be plotted
#' @param WG_countries Character vector of the ISO3 codes of WG member countries
#' @param WG_institutions Dataframe of the institution geocodes to be plotted with column names as "Institution", "lat" and "lon"
#' @param hilight_countries If true, also colour the member countries.
#'
#' @import ggplot2
#' @import data.table
#' @import broom
#' @import rgeos
#' @import rworldmap
#' @import ggimage
#' @import tidyverse
#' @import raster
#' @import sf
#'
#' @export

# for development/debugging
# WG_name = WG_names[rw]
# WG_countries = countries[[rw]]

plot_geocode_map <- function(WG_name, WG_countries = NULL, WG_institutions, hilight_countries){

  # create a data frame to plot markers
  plot_df =

  if(hilight_countries){
    ### Create a map data frame that has an indicator for participating countries
    # This will allow us to colour countries
    # Note we remove Antarctica because it wont transform niceley
    countDF = data.frame(country = WG_countries,
                         participation = rep(1, length(WG_countries)))
    Map = joinCountryData2Map(countDF, joinCode = "ISO3",
                              nameJoinColumn = "country")[-which(getMap()$ADMIN=="Antarctica"),]
    # Transofrm to Mercator projection
    Map = spTransform(Map, "+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs")
    map_data = tidy(Map)
    # attach map data for plotting
    sub_Map =Map@data[,c("ADMIN","ISO3","participation")]
    colnames(sub_Map)[1] = c("id")
    map_data = data.table(left_join(map_data, sub_Map))
  }

  ### Define plot area
  plot_area = c(-20037508, 20037508, -32493690 + 15000000, 18397474 + 5E+05)

  ### Markers
  plot_df$image  = file.path(.libPaths()[1],"mapSOOSWG", "marker3.png")
  plot_df$image2  = file.path(.libPaths()[1],"mapSOOSWG", "marker_dot.png")

  ### Plot
  # This is the baseplot code for the map
  baseWO =  ggplot() +
    # plot background box
    geom_rect(aes(xmin = plot_area[1], xmax = plot_area[2], ymin = plot_area[3], ymax = plot_area[4]),size = 1, color = "black", fill = SOOScol[3])+
    # plot whole world
    geom_polygon(data =map_data, aes(x = long, y = lat, group = group),fill = SOOScol[4], colour = SOOScol[4])

  if(hilight_countries){baseWO = baseWO +
    # plot SOOS WG countries (single colour)
    geom_polygon(data =map_data[participation == 1], aes(x = long, y = lat, group = group), fill = SOOScol[1], colour = SOOScol[1], lwd = 0.5)
  }
  baseWO = baseWO +
    # plot antarctica. Antarctica is hard! This uses "ant" from the package data
    geom_sf(data = ant,fill = SOOScol[4], colour = SOOScol[4]) +
    xlab("") +
    ylab("") +
    # plot the marker. We plot the markers as 2 layers so that the marker centers always appear at the top and are not hidden.
    geom_image(data = plot_df, aes(x = lon, y=lat, image = image), size = 0.03, asp =1.1)+
    geom_image(data = centroids_df, aes(x = lon, y=lat, image = image2), size = 0.03, asp =1.1)+
    # plot the box border
    geom_rect(aes(xmin = plot_area[1],xmax = plot_area[2], ymin = plot_area[3], ymax = plot_area[4]),size = 1, color = "black", fill = NA)+

    # Change theme to remove axes and ticks
    theme(panel.background = element_blank(),legend.position = "none",
          panel.grid.minor = element_blank(),axis.ticks=element_blank(), axis.text = element_blank())

  return(baseWO)

}
